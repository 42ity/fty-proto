<class
    name = "fty_proto"
    signature = "1"
    title = "Core FTY protocols"
    script = "zproto_codec_c_v1"
    package_dir = "../include"
    source_dir = "."
    export_header = "ftyproto.h"
    >
    FTY core protocols

    The software maintains three main types of information divided to three streams

    1. Stream: ASSETS - semi-static data about changes in assets, see ASSET message
    2. Stream: METRICS - dynamic information about metric data coming from varous devices
    3. Stream: ALERTS - information about alerts produced for given asset based on metric information

<include filename = "../license.xml" />

<define name = "STREAM_METRICS"         value = "&quot;METRICS&quot;" />
<define name = "STREAM_ALERTS"          value = "&quot;ALERTS&quot;" />
<define name = "STREAM_ASSETS"          value = "&quot;ASSETS&quot;" />
<define name = "STREAM_ALERTS_SYS"      value = "&quot;_ALERTS_SYS&quot;" />
<define name = "STREAM_METRICS_SENSOR"  value = "&quot;_METRICS_SENSOR&quot;" />
<define name = "STREAM_METRICS_UNAVAILABLE"  value = "&quot;_METRICS_UNAVAILABLE&quot;" />
<define name = "STREAM_EULA"          value = "&quot;_EULA&quot;" />

<define name = "ASSET_TYPE" value = "&quot;type&quot;" />
<define name = "ASSET_SUBTYPE" value = "&quot;subtype&quot;" />
<define name = "ASSET_STATUS" value = "&quot;status&quot;" />
<define name = "ASSET_PRIORITY" value = "&quot;priority&quot;" />
<define name = "ASSET_PARENT" value = "&quot;parent&quot;" />

<define name = "ASSET_OP_CREATE"        value = "&quot;create&quot;" />
<define name = "ASSET_OP_UPDATE"        value = "&quot;update&quot;" />
<define name = "ASSET_OP_DELETE"        value = "&quot;delete&quot;" />
<define name = "ASSET_OP_RETIRE"        value = "&quot;retire&quot;" />
<define name = "ASSET_OP_INVENTORY"     value = "&quot;inventory&quot;" />
<define name = "ASSET_AUX_TYPE"         value = "&quot;type&quot;" />
<define name = "ASSET_AUX_SUBTYPE"      value = "&quot;subtype&quot;" />
<define name = "ASSET_AUX_PARENT_NAME_1" value = "&quot;parent_name.1&quot;" />
<define name = "ASSET_EXT_PORT"         value = "&quot;port&quot;" />
<define name = "ASSET_EXT_MODEL"        value = "&quot;model&quot;" />
<define name = "ASSET_EXT_DEVICE_PART"  value = "&quot;device.part&quot;" />

<define name = "RULE_CLASS" value = "&quot;rule_class&quot;" >
    Name of aux hash key to get a rule class. Usage
        fty_proto_aux_string (msg, FTY_PROTO_RULE_CLASS, "");
</define>

<define name = "METRIC_ELEMENT_DEST" value = "&quot;element-dest&quot;" />
<define name = "METRICS_AUX_PORT" value = "&quot;port&quot;" />
<define name = "METRICS_SENSOR_AUX_SNAME" value = "&quot;sname&quot;" />
<define name = "METRICS_SENSOR_AUX_PORT" value = "&quot;port&quot;" />

<header>
    <field name = "aux" type = "hash"/>
</header>

<message
    name = "METRIC"
    id = "1"
    >

    <field name = "time" type = "number" size = "8"> Metric timestamp -
        unixtime.
    </field>

    <field name = "ttl" type = "number" size = "4">
        Time to live in seconds.

        Value defines duration of validity (i.e. how long is metric valid,
        when it expires) as well as the latest time we should receive metric
        updates.
    </field>

    <field name = "type" type = "string">
        Metric name, e.g.: "temperature", "humidity", "power.load", ...
    </field>

    <field name = "name" type = "string">
        Name of asset where metric is produced.
    </field>

    <field name = "value" type = "string">
        Metric value, e.g.: "25.323" or "900".
    </field>

    <field name = "unit" type = "string">
        Metric unit, e.g.: "C" or "F" for temperature.
    </field>
</message>

<message
    name = "ALERT"
    id = "2"
    >

    <field name = "time" type = "number" size = "8">
        Alert timestamp - unixtime.
    </field>

    <field name = "ttl" type = "number" size = "4">
        Time to live in seconds.

        Value defines duration of validity (i.e. how long is alert valid, when
        it expires).
        When current unixtime is greater than time + ttl this alert expired
        and is no longer valid.
    </field>

    <field name = "rule" type = "string">
        Name of the rule which triggers this alert.
    </field>

    <field name = "name" type = "string">
        Name of asset where alert is trigged.
    </field>

    <field name = "state" type = "string">
        Alert state.

        Permissible values:
        ACTIVE / ACK-WIP / ACK-IGNORE / ACK-PAUSE / ACK-SILENCE / RESOLVED
    </field>

    <field name = "severity" type = "string">
        Alert severity.

        Permissible values:
        INFO / WARNING / CRITICAL
    </field>

    <field name = "description" type = "string">
        Alert description.
    </field>


    <field name = "action" type = "strings">
        List of actions, e.g.: "EMAIL", "SMS".
        Can be empty.
    </field>
</message>

<message
    name = "ASSET"
    id = "3">
    <field name = "name" type = "string">
        Asset name.
    </field>

    <field name = "operation" type = "string">
        Asset operation.

        Permissible values:
        create / update / delete / inventory / retire

        A little explanation. Due to historical reasons:
        * 'update' is actually 'delete' + 'create', so only it is essentially
           a 'replace' operation: only data passed in this message become the
           new content of asset information.
        * 'delete' is the same as 'retire'
        * 'inventory' is update of extended and/or auxilliary information
          (ext/aux field)
    </field>

    <field name = "ext" type = "hash">
        Additional extended information.
    </field>
</message>

</class>
